<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>土拨鼠的博客</title><link>https://samling-jackyjyo.github.io</link><description>这里是土拨鼠的博客，用来收集和分享有趣的事情</description><copyright>土拨鼠的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://easyimage.01011205.xyz/i/2024/09/08/nlnmn5.png</url><title>avatar</title><link>https://samling-jackyjyo.github.io</link></image><lastBuildDate>Mon, 09 Sep 2024 03:00:01 +0000</lastBuildDate><managingEditor>土拨鼠的博客</managingEditor><ttl>60</ttl><webMaster>土拨鼠的博客</webMaster><item><title>GitHub-Models - 使用指南</title><link>https://samling-jackyjyo.github.io/post/GitHub-Models%20-%20-shi-yong-zhi-nan.html</link><description>&#13;
## 一、GitHub Models&#13;
&#13;
[GitHub Models 8](https://github.com/marketplace/models) 是 GitHub 最新推出的模型托管服务，提供免费的 AI 模型供开发者测试。</description><guid isPermaLink="true">https://samling-jackyjyo.github.io/post/GitHub-Models%20-%20-shi-yong-zhi-nan.html</guid><pubDate>Fri, 06 Sep 2024 01:51:25 +0000</pubDate></item><item><title>Cloudflare薅羊毛系列之短链接生成器附带统计图表分析功能|Github开源|pages部署|Cloudflare羊毛小组成员|免费部署|免VPS项目</title><link>https://samling-jackyjyo.github.io/post/Cloudflare-hao-yang-mao-xi-lie-zhi-duan-lian-jie-sheng-cheng-qi-fu-dai-tong-ji-tu-biao-fen-xi-gong-neng--Github-kai-yuan--pages-bu-shu--Cloudflare-yang-mao-xiao-zu-cheng-yuan---mian-fei-bu-shu---mian-VPS-xiang-mu.html</link><description>转载自：[Cloudflare薅羊毛系列之短链接生成器附带统计图表分析功能|Github开源|pages部署|Cloudflare羊毛小组成员|免费部署|免VPS项目](https://www.youtube.com/watch?v=PaGkJVx-ZiA)&#13;
&#13;
## 项目特点&#13;
首先，这个项目虽然是免费的，但功能和性能都非常出色。</description><guid isPermaLink="true">https://samling-jackyjyo.github.io/post/Cloudflare-hao-yang-mao-xi-lie-zhi-duan-lian-jie-sheng-cheng-qi-fu-dai-tong-ji-tu-biao-fen-xi-gong-neng--Github-kai-yuan--pages-bu-shu--Cloudflare-yang-mao-xiao-zu-cheng-yuan---mian-fei-bu-shu---mian-VPS-xiang-mu.html</guid><pubDate>Thu, 05 Sep 2024 12:14:45 +0000</pubDate></item><item><title>Cloudflare Workers优秀项目收集</title><link>https://samling-jackyjyo.github.io/post/Cloudflare%20Workers-you-xiu-xiang-mu-shou-ji.html</link><description>转载自：[Cloudflare Workers优秀项目收集（持续更新） - iGdu (igdux.com)](https://www.igdux.com/workers)&#13;
&#13;
&#13;
Cloudflare 是一家伟大的互联网公司，她致力于建立更好的互联网。</description><guid isPermaLink="true">https://samling-jackyjyo.github.io/post/Cloudflare%20Workers-you-xiu-xiang-mu-shou-ji.html</guid><pubDate>Wed, 04 Sep 2024 08:34:46 +0000</pubDate></item><item><title>搭建多功能的开源环境工具1panel</title><link>https://samling-jackyjyo.github.io/post/da-jian-duo-gong-neng-de-kai-yuan-huan-jing-gong-ju-1panel.html</link><description>![0bf209eb28da82a04aa1a.jpg](https://img.yohaman.pp.ua/file/0bf209eb28da82a04aa1a.jpg)&#13;
[转载：一瓶奶油1Panel搭建Wordpress](https://naiyous.com/5690.html)&#13;
&#13;
准备工作&#13;
&#13;
下载并安装SSH连接工具Finalshell：【[点击进入](https://www.hostbuf.com/t/988.html)】&#13;
&#13;
准备一个域名并托管到Cloudflare：【[点击进入](https://dash.cloudflare.com/login)】&#13;
&#13;
1、关闭防火墙/设置防火墙规则&#13;
&#13;
ufw disable&#13;
2、更新系统&#13;
&#13;
apt update -y  &amp;&amp; apt upgrade -y&#13;
3、1Panel官网：【[点击进入](https://1panel.cn/)】&#13;
&#13;
一键安装脚本&#13;
curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; sudo bash quick_start.sh&#13;
4、安装应用：OpenResty、MySQL、Redis、PHP8&#13;
&#13;
5、创建数据库&#13;
&#13;
点击创建数据库——自定义名称和用户名——密码随机——其它保持默认——点击确定&#13;
6、创建网站并申请证书&#13;
&#13;
点击创建网站——点击运行环境——其它保持默认——输入解析好的域名——点击确定&#13;
&#13;
点击证书——点击Acme账户——点击创建账户——输入邮箱（==你自己的邮箱==）——点击确定——点击返回——点击申请证书——输入解析好的域名——其它保持不变——验证方式选择HTTP——点击确定（==注意：这一步申请证书前，请检查防火墙是否关闭或者放行80端口==）&#13;
&#13;
点击网站——点击网站名称——点击HTTPS——启用 HTTPS——Acme 账户点开——选择前面创建好的账户——点击保存&#13;
&#13;
点击网站目录——点击“root目录”后面的蓝色文件夹图标——把index.php文件删掉——点击远程下载——Wordpress下载：【[点击进入](https://cn.wordpress.org/download/)】——复制链接地址过来——点击确认——下载完成后关掉——解压下载的文件——点击确认——得到wordpress文件夹——把压缩包删除——再点击到网站——点击网站名称——点击网站目录——点开运行目录——选择/wordpress——点击保存并重载&#13;
&#13;
7、Wordpress登录并设置&#13;
&#13;
新打开一个页面——输入网站域名——点击现在就开始——回到1panel面板——点击数据库——把数据库名称、用户名、密码复制过来——数据库主机输入：mysql——点击下一步——复制配置文件内容——回到1panel面板——点击网站——点击网站目录——打开wordpress——找到此“wp-config-sample.php”并打开——删除里面的内容——把复制的内容粘贴进去——点击确认——再把文件重命名为“wp-config.php”——再回到前端——点击运行安装程序——站点标题自定义——用户名自定义——密码自定义——输入自己的邮箱——点击安装WordPress——点击登录——输入设置好的邮箱和密码——即可完成安装。</description><guid isPermaLink="true">https://samling-jackyjyo.github.io/post/da-jian-duo-gong-neng-de-kai-yuan-huan-jing-gong-ju-1panel.html</guid><pubDate>Tue, 03 Sep 2024 12:55:07 +0000</pubDate></item><item><title>用poste.io搭建邮局教程</title><link>https://samling-jackyjyo.github.io/post/yong-poste.io-da-jian-you-ju-jiao-cheng.html</link><description>## 一.搭建前的准备&#13;
&#13;
1、域名一个，如果没有，购买一个com、net或者org，不推荐用不受信任的域名后缀。</description><guid isPermaLink="true">https://samling-jackyjyo.github.io/post/yong-poste.io-da-jian-you-ju-jiao-cheng.html</guid><pubDate>Tue, 03 Sep 2024 11:53:59 +0000</pubDate></item><item><title>利用cloudflarework+pages部署一个简易的临时邮件系统-cloudflare羊毛系列</title><link>https://samling-jackyjyo.github.io/post/li-yong-cloudflarework%2Bpages-bu-shu-yi-ge-jian-yi-de-lin-shi-you-jian-xi-tong--cloudflare-yang-mao-xi-lie.html</link><description># 项目官方文档&#13;
&#13;
[https://temp-mail-docs.awsl.uk/zh/guide/config-send-mail](https://temp-mail-docs.awsl.uk/zh/guide/config-send-mail)&#13;
&#13;
# 项目github仓库&#13;
&#13;
[https://github.com/dreamhunter2333/cloudflare_temp_email](https://github.com/dreamhunter2333/cloudflare_temp_email)&#13;
&#13;
# 安装过程&#13;
&#13;
## 首先要定义两个域名&#13;
&#13;
- 前端url webmail.0808888.xyz&#13;
- 后端url cfmail-api.0808888.xyz&#13;
&#13;
## 1.数据库设置&#13;
&#13;
- 在works和pages中选D1数据库&#13;
- 创建数据库起名字dev&#13;
- 创建后进入到dev数据库,然后打开consol标签  &#13;
    -把 [https://github.com/dreamhunter2333/cloudflare_temp_email/blob/main/db/schema.sql](https://github.com/dreamhunter2333/cloudflare_temp_email/blob/main/db/schema.sql)这个schema.sql文件中的内容复制到donsol中,然后点击Execute按钮&#13;
- 数据库创建完成&#13;
&#13;
---&#13;
&#13;
## 2.后台程序部署&#13;
&#13;
- 还是在在works和pages中,创建应用程序,选workers&#13;
- 起名字cfmail-api,保存,然后点右下角完成.&#13;
- 然后界面中右上角点edit code.&#13;
- 然后再左边点击文件按钮,右键点works.js然后删除.&#13;
- **再下载[works.js](https://github.com/dreamhunter2333/cloudflare_temp_email/releases/latest/download/worker.js)**&#13;
- 右键点击,出现上传,把下载的works.js上传上去,然后右上角部署&#13;
- 再来到项目的settings--&gt;Variables中,添加变量&#13;
- 开始部署时我们只添加4个变量,文章结尾我附带了可设置的变量代码示例说明.&#13;
    &#13;
    - ADMIN_PASSWORDS = ['1234']&#13;
    - PASSWORDS = ['1234']&#13;
    - DOMAINS = ['milaone.app']&#13;
    - JWT_SECRET =['xxxyyyzzz']&#13;
- 在KV Namespace Bindings中添加一个KV&#13;
    &#13;
    - 创建一个KV,起名字dev&#13;
    - 然后在这里Variable name填 KV 大写.&#13;
    - KV Namespace选择创建的KV库dev&#13;
- 添加D1数据库&#13;
    &#13;
    - 同样在settings--&gt;Variable中,找到D1 Database,添加上一步创建的数据库dev&#13;
- 最后再进行部署一次.&#13;
&#13;
- 后端验证&#13;
    &#13;
    - 后端设置完成后,可以通过访问后端域名的url及目录进行验证,例如我的域名&#13;
    - cfmail-api.0808888.xyz 返回结果OK&#13;
    - cfmail-api.0808888.xyz/health_check 返回结果OK&#13;
    - 则说明后端配置完成.后期可随时在变量中增删内容以达到配置效果&#13;
&#13;
---&#13;
&#13;
## 3.前台程序部署&#13;
&#13;
- 还是在在works和pages中,创建应用程序,选Pages&#13;
- 选择Create using direct upload,然后再选择Upload assets按钮&#13;
- 然后来到作者的官方文档中 [点击这里生成配置文件](https://temp-mail-docs.awsl.uk/zh/guide/ui/pages.html)&#13;
- 在该页面中的地址栏输入后端的域名的https地址,比如我使用的地址是[https://cfmail-api.0808888.xyz](https://cfmail-api.0808888.xyz/) 生成配置,得到下载一个frontend.zip文件,上传到pages中.  &#13;
    ![2024-06-06T02:47:55.png](https://www.milaone.com/usr/uploads/2024/06/1764034871.png '2024-06-06T02:47:55.png')&#13;
- 最后在Custom Domain给前端自定义一个域名,例如我使用的是webmail.0808888.xyz&#13;
- 前端验证,访问前端[https://webmail.milaone.com](https://webmail.milaone.com/),此时应该出现界面并提示输入密码&#13;
&#13;
## 3.邮件路由设置&#13;
&#13;
- 来到[https://dash.cloudflare.com](https://dash.cloudflare.com/) 面板首页,然后选择需要使用的域名进入.&#13;
- 左边选择Email菜单,在Email Routing中选择Routing ruls中Catch-all address  &#13;
    激活,并且edit.&#13;
- 其中的Action选择的是Send to a Worker ,目标选择后端的worker名字&#13;
- 验证:截止到现在登录前端url已经可以&#13;
&#13;
## 4.发送邮件设置&#13;
&#13;
- [https://resend.com/domains](https://resend.com/domains)进行域名验证&#13;
- 然后在API-Key 中创建一个api,全部权限,然后把密码拷贝&#13;
- 到后端的Worker中Settings--&gt;Environment Variables--&gt;添加一个变量&#13;
- RESEND_TOKEN = re_PxW46o6o_HJrmMYARCGdhMtB3JHD(上一步拷贝出来的密码)&#13;
&#13;
## 截止到以上步骤,就可以完整的收发邮件了.&#13;
&#13;
## 如果需要更方便的朋友,强烈建议挂上Telegram机器人&#13;
&#13;
## 5.Telegram机器人&#13;
&#13;
- 创建机器人(具体方法自己搜.)&#13;
- 拿到用于这个项目的机器人token,还有telegram的账户id.&#13;
- 到后端的Worker中Settings--&gt;Environment Variables--&gt;添加一个变量&#13;
- TELEGRAM_BOT_TOKEN = 机器人token&#13;
- 在邮件的管理后台,机器人中填入账户id.&#13;
&#13;
# 附1:变量说明&#13;
&#13;
```&#13;
[vars]&#13;
# TITLE = 'Custom Title' # 自定义网站标题&#13;
PREFIX = 'tmp' # 要处理的邮箱名称前缀，不需要后缀可配置为空字符串&#13;
# 如果你想要你的网站私有，取消下面的注释，并修改密码&#13;
# PASSWORDS = ['123', '456']&#13;
# admin 控制台密码, 不配置则不允许访问控制台&#13;
# ADMIN_PASSWORDS = ['123', '456']&#13;
# admin 联系方式，不配置则不显示，可配置任意字符串&#13;
# ADMIN_CONTACT = 'xx@xx.xxx'&#13;
DOMAINS = ['xxx.xxx1' , 'xxx.xxx2'] # 你的域名, 支持多个域名&#13;
JWT_SECRET = 'xxx' # 用于生成 jwt 的密钥, jwt 用于给用户登录以及鉴权&#13;
BLACK_LIST = '' # 黑名单，用于过滤发件人，逗号分隔&#13;
# 是否允许用户创建邮件, 不配置则不允许&#13;
ENABLE_USER_CREATE_EMAIL = true&#13;
# 允许用户删除邮件, 不配置则不允许&#13;
ENABLE_USER_DELETE_EMAIL = true&#13;
# 允许自动回复邮件&#13;
ENABLE_AUTO_REPLY = false&#13;
# 是否启用 webhook&#13;
# ENABLE_WEBHOOK = true&#13;
# 前端界面页脚文本&#13;
# COPYRIGHT = 'Dream Hunter'&#13;
# 默认发送邮件余额，如果不设置，将为 0&#13;
# DEFAULT_SEND_BALANCE = 1&#13;
# Turnstile 人机验证配置&#13;
# CF_TURNSTILE_SITE_KEY = ''&#13;
# CF_TURNSTILE_SECRET_KEY = ''&#13;
# dkim config&#13;
# DKIM_SELECTOR = 'mailchannels' # 参考 DKIM 部分 mailchannels._domainkey 的 mailchannels&#13;
# DKIM_PRIVATE_KEY = '' # 参考 DKIM 部分 priv_key.txt 的内容&#13;
# telegram bot 最多绑定邮箱数量&#13;
# TG_MAX_ACCOUNTS = 5&#13;
# 全局转发地址列表，如果不配置则不启用，启用后所有邮件都会转发到列表中的地址&#13;
# FORWARD_ADDRESS_LIST = ['xxx@xxx.com']。</description><guid isPermaLink="true">https://samling-jackyjyo.github.io/post/li-yong-cloudflarework%2Bpages-bu-shu-yi-ge-jian-yi-de-lin-shi-you-jian-xi-tong--cloudflare-yang-mao-xi-lie.html</guid><pubDate>Tue, 03 Sep 2024 11:15:30 +0000</pubDate></item><item><title>土拨鼠的窝</title><link>https://samling-jackyjyo.github.io/post/tu-bo-shu-de-wo.html</link><description>收藏各种有趣的工具。</description><guid isPermaLink="true">https://samling-jackyjyo.github.io/post/tu-bo-shu-de-wo.html</guid><pubDate>Tue, 03 Sep 2024 07:18:27 +0000</pubDate></item></channel></rss>